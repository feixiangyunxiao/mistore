<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linxingjie.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.linxingjie.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="activecode" property="activecode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, gender, password, email, flag, activecode
  </sql>
  <!--进行查询操作-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_user
    where id = #{id,jdbcType=INTEGER}
  </select>

    <select id="selectByNameAndPassword" resultMap="BaseResultMap"  >
        select
        <include refid="Base_Column_List" />
        from tb_user
        where name = #{name} and password = #{password}
    </select>

  <select id="selectByName" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_user
    where name=#{name}
  </select>

  <select id="selectByEmail" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_user
    where email=#{email}
  </select>


  <!--进行删除操作-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--进行新增操作-->
  <insert id="insert" parameterType="com.linxingjie.pojo.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user (name, gender, password, 
      email, flag, activecode)
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER},#{activecode})
  </insert>

  <!--进行更新操作-->
  <update id="updateByPrimaryKeySelective" parameterType="com.linxingjie.pojo.User" >
    update tb_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linxingjie.pojo.User" >
    update tb_user
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      activecode = #{activecode}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByEmail">
    update tb_user
    set
      flag = 2
    where email = #{email,jdbcType=VARCHAR} and activecode = #{activecode}
  </update>
</mapper>